{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","push","updateList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAqEeA,E,kDAjEb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAM,CACTC,QAAQ,GACRC,KAAK,IALS,E,+CASlB,SAAYC,EAAKC,GACfC,KAAKC,SAAL,eACGH,EAAKC,M,qBAIV,WAEE,IAAMH,EAAS,CACbM,GAAI,EAAEC,KAAKC,SACXL,MAAOC,KAAKL,MAAMC,SAEZC,EAAI,YAAOG,KAAKL,MAAME,MAE5BA,EAAKQ,KAAKT,GAEVI,KAAKC,SAAS,CAACJ,OAAMD,QAAQ,O,wBAIjC,SAAWM,GACT,IAEMI,EAFK,YAAIN,KAAKL,MAAME,MAEFU,QAAO,SAAAC,GAAI,OAAGA,EAAKN,KAAOA,KAElDF,KAAKC,SAAS,CAACJ,KAAKS,M,oBAIpB,WAAS,IAAD,OACR,OACE,qBAAKG,UAAU,MAAf,SACE,8CAEE,uBACA,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBZ,MAAOC,KAAKL,MAAMC,QAASgB,SAAU,SAAAC,GAAC,OAAE,EAAKC,YAAY,UAAWD,EAAEE,OAAOhB,UAE/H,wBAAQiB,QAAS,kBAAI,EAAKC,WAAWR,UAAU,MAA/C,iBACA,6BACGT,KAAKL,MAAME,KAAKqB,KAAI,SAAAV,GACnB,OACE,+BACGA,EAAKT,MACN,wBAAQU,UAAU,SAClBO,QAAS,kBAAM,EAAKG,WAAWX,EAAKN,KADpC,mBAFOM,EAAKN,kB,GAnDZkB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66e59c15.chunk.js","sourcesContent":["import './App.css';\nimport React, {Component} from 'react';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      newItem:'',\n      list:[]\n    }\n  }\n\n  updateInput(key, value){\n    this.setState({\n      [key]:value\n    })\n  }\n\n  addItem(){\n    \n    const newItem= {\n      id: 1+Math.random(),\n      value: this.state.newItem};\n\n      const list = [...this.state.list]\n\n      list.push(newItem)\n\n      this.setState({list, newItem:\"\"})\n\n  }  \n\n  deleteItem(id){\n    const list=[...this.state.list]\n\n    const updateList = list.filter(item =>item.id !== id)\n\n    this.setState({list:updateList})\n  }\n\n  \n    render(){\n    return (\n      <div className=\"App\">\n        <div>\n          To Do listn\n          <br/>\n          <input type='text' placeholder='Type item here..' value={this.state.newItem} onChange={e=>this.updateInput(\"newItem\", e.target.value)}> \n          </input>\n          <button onClick={()=>this.addItem()} className='btn'>Add</button>\n          <ul>\n            {this.state.list.map(item => {\n              return(\n                <li key={item.id}>\n                  {item.value}\n                  <button className='btnDel'\n                  onClick={() => this.deleteItem(item.id)}\n                  >Del</button>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}